[project]
name = "cloudnetpy"
description = "Python package for Cloudnet processing"
authors = [{name = "Simo Tukiainen"}]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
]
dependencies = [
  "cloudnetpy_qc>=1.13.8",
  "matplotlib",
  "mwrpy>=0.4.3",
  "netCDF4",
  "requests",
  "rpgpy>=0.14.5",
  "scikit-image",
  "scipy",
]
dynamic = ["version"]

[project.optional-dependencies]
test = [
  "mypy",
  "pytest",
  "pytest-flakefinder",
  "ruff",
  "types-requests",
]
dev = ["pre-commit", "release-version"]
extras = ["voodoonet>=0.1.1"]

[project.urls]
Homepage = "https://github.com/actris-cloudnet/cloudnetpy"
Documentation = "https://cloudnetpy.readthedocs.io"
Repository = "https://github.com/actris-cloudnet/cloudnetpy"
Changelog = "https://github.com/actris-cloudnet/cloudnetpy/blob/main/CHANGELOG.md"

[tool.mypy]
check_untyped_defs = true

[[tool.mypy.overrides]]
module = ["matplotlib.*", "mpl_toolkits.*", "netCDF4.*", "scipy.*", "skimage.*", "voodoonet.*"]
ignore_missing_imports = true

[tool.release-version]
filename = "cloudnetpy/version.py"
pattern = ["MAJOR = (?P<major>\\d+)", "MINOR = (?P<minor>\\d+)", "PATCH = (?P<patch>\\d+)"]
changelog = "CHANGELOG.md"

[tool.ruff]
extend-select = ["I"]
exclude = ["cloudnetpy/model_evaluation/tests/", "tests/"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "A001",
  "ANN",
  "B9",
  "C9",
  "D",
  "ERA",
  "FBT",
  "FIX002",
  "INP001",
  "N8",
  "PD011",
  "PERF",
  "PLR",
  "PLR2004",
  "PLW",
  "PTH",
  "RUF",
  "RUF002",
  "S101",
  "TD002",
  "TD003",
  "TRY",
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401"]

[tool.setuptools.dynamic]
version = {attr = "cloudnetpy.version.__version__"}

[tool.setuptools.packages]
find = {}

[tool.tomlsort]
trailing_comma_inline_array = true
sort_inline_arrays = true
